setwd("~/Documents/Estudos - Importante/ProjetosGit/Machine Learning Exercises/Activity 7 - Random Forest Regression")
#################################
#     Importing the dataset     #
#################################
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
############################################################
#     Fitting Random Florest Regression to the dataset     #
############################################################
install.packages('randomflorest')
###########################################################
#     Fitting Random Forest Regression to the dataset     #
###########################################################
install.packages('randomforest')
###########################################################
#     Fitting Random Forest Regression to the dataset     #
###########################################################
install.packages('randomForest')
library(randomForest)
set.seed(1234)
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 10)
###################################
#     Predicting a new result     #
###################################
y_pred = predict(regressor, data.frame(Level = 6.5))
################################################################################
#     Visualising the Random Forest Regression results (higher resolution)     #
################################################################################
# install.packages('ggplot2')
library(ggplot2)
x_grid = seq(min(dataset$X), max(dataset$X), 0.01)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Regression)') +
xlab('Level') +
ylab('Salary')
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 100)
###################################
#     Predicting a new result     #
###################################
y_pred = predict(regressor, data.frame(Level = 6.5))
################################################################################
#     Visualising the Random Forest Regression results (higher resolution)     #
################################################################################
# install.packages('ggplot2')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Regression)') +
xlab('Level') +
ylab('Salary')
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 1000)
###################################
#     Predicting a new result     #
###################################
y_pred = predict(regressor, data.frame(Level = 6.5))
################################################################################
#     Visualising the Random Forest Regression results (higher resolution)     #
################################################################################
# install.packages('ggplot2')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Regression)') +
xlab('Level') +
ylab('Salary')
